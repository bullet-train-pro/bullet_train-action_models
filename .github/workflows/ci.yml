name: CI

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        rails-version:
          - "7.1"
          - "6.1"
          - "main"
        ruby-version:
          - "3.0"
          - "3.2"

    env:
      RAILS_ENV: test
      RAILS_VERSION: ${{ matrix.rails-version }}

    name: ${{ format('Test rails@{0} ruby@{1}', matrix.rails-version, matrix.ruby-version) }}
    runs-on: "ubuntu-latest"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
    - name: Run tests
      run: bundle exec rails test

  standard:
    runs-on: ubuntu-latest
    name: "Standard"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true
      - name: Run Standard
        run: bundle exec standardrb

  starter_repo:
    runs-on: ubuntu-latest
    name: Bullet Train Starter Repo Action Models Tests
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - "6379:6379"
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
      BUNDLE_JOBS: 2
      BUNDLE_RETRY: 3
    steps:
      - name: Checkout This Repo
        uses: actions/checkout@v4

      - name: Checkout Starter Repo
        uses: bullet-train-co/checkout-repo-with-matching-branch@v1
        with:
          target_dir: tmp/starter
          repository: bullet-train-co/bullet_train

      - name: Checkout Core Repo
        uses: bullet-train-co/checkout-repo-with-matching-branch@v1
        with:
          target_dir: tmp/core
          repository: bullet-train-co/bullet_train-core

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: tmp/starter
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: tmp/starter/.nvmrc
          cache: 'yarn'
          cache-dependency-path: tmp/starter/yarn.lock

      - name: Link This Repo
        uses: bullet-train-co/link-local-gem@v1
        with:
          application_dir: tmp/starter
          local_gem_dir: .

      - name: Debug Gemfile
        run: cat Gemfile
        working-directory: tmp/starter

      - name: Debug Gemfile.lock
        run: cat Gemfile.lock
        working-directory: tmp/starter

      - name: Link Core Repo
        uses: bullet-train-co/link-core-gems@v1
        with:
          application_dir: tmp/starter
          core_dir: tmp/core

      - name: Debug Gemfile
        run: cat Gemfile
        working-directory: tmp/starter

      - name: Debug Gemfile.lock
        run: cat Gemfile.lock
        working-directory: tmp/starter

      - name: Set up database schema
        run: bin/rails db:schema:load
        working-directory: tmp/starter

      # TODO: This might be a bad idea. Maybe we should just have spring in the Gemfile all the time.
      - name: Allow adding of spring
        run: bundle config unset deployment
        working-directory: tmp/starter

      - name: Add Spring
        run: bundle add spring
        working-directory: tmp/starter

      - name: Setup Action Models Tests
        run: bundle exec test/bin/setup-action-models-system-test
        working-directory: tmp/starter

      - name: Run Action Models Tests
        id: run-tests
        run : bundle exec rails test test/system/action_models_test.rb
        working-directory: tmp/starter

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "tmp/starter/test/reports/**/TEST-*.xml"
          #output: test-summary.md
        if: always()


